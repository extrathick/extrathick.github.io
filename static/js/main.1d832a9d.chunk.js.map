{"version":3,"sources":["pics/logo.svg","lib/csvValueLookup.js","components/test.js","components/GenericEchartsSunburst.js","components/SunburstController.js","components/OdorSVG.js","components/ClassOdorSVG.js","components/GenericBarChart.js","components/mushStackChart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","json","require","mushroom","lookup","char","category","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","jsonArray","Symbol","iterator","next","done","item","value","key","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","character","err","return","res","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","push","i","length","count","types","this","getAllPossible","slot","getCategoryNumber","forEach","data","type","index","subcategories","getCount","header","TestComponent","look","react_default","a","createElement","style","width","lookupChar","lib_default","option","xAxis","yAxis","series","tooltip","height","React","Component","GenericEchartsSunburst","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","getOption","_this$props","inner","outer","computed","compute","valueInner","obj","name","children","valueOuter","outerObj","number","radius","label","rotate","innerCategory","outerCategory","computeHelper","retObj","map","innerNumber","outerNumber","datum","itemIn","itemOut","prevProps","setState","SunburstController","setInner","setOuter","headers","getCategories","_this2","SunburstController_Dropdown","items","onChange","event","target","selected","components_GenericEchartsSunburst","Dropdown","OdorSVG","l","c","y","f","m","n","s","title","text","textStyle","color","x","legend","axisLabel","ClassOdorSVG","ae","le","ce","ye","fe","me","ne","pe","se","ap","lp","cp","yp","fp","mp","np","pp","sp","GenericBarChart","colors","compileData","getData","itemStyle","console","log","TryingHard","trigger","axisPointer","toolbox","show","orient","left","top","feature","mark","dataView","readOnly","magicType","restore","saveAsImage","calculable","axisTick","barGap","App","className","src","logo","alt","components_GenericBarChart","test","SunburstController_SunburstController","components_OdorSVG","components_ClassOdorSVG","mushStackChart","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1d832a9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const json = require('../data/kaggle.json');\nconst mushroom = require('../data/mushrooms.json');\n\nclass lookup{\n    /* This function takes a character and the category and will return the \"expanded version\" of the character\n    example: lookupChar('a', 'population') will return \"abundant\"\n    it is worth noting that edibility is 'classes'\n    */ \n    lookupChar(char, category){\n        for (let item of json.jsonArray){\n            if(item.key === category){\n                for(let character of item.value){\n                    if(character.key === char){\n                        return character.value;\n                    }\n                }\n            }\n        }\n    }\n    /*\n    Returns all possible values for a category.\n    Example: 'classes' returns key/value pairs for edible e and poisonous p\n    */\n    getAllPossible(category){\n        let res = [];\n        for (let item of json.jsonArray){\n            if(item.key === category){\n                for(let character of item.value){\n                    res.push(character);\n                }\n            }\n        }\n        return res;\n    }\n\n    // this takes a number and returns at which place in the array it should be at.\n    getCategoryNumber(category){\n        for(let i = 0; i < json.jsonArray.length; i++){\n            if(json.jsonArray[i].key === category){\n                return i;\n            }\n        }\n    }\n\n    //takes a category and returns the number of times a subcategory appears in the mushroom dataset as an array\n    getCount(category) {\n        let count = [];\n        let types = this.getAllPossible(category);\n        let slot = this.getCategoryNumber(category);\n\n        types.forEach(() => {\n            count.push(0);\n        });\n\n        mushroom.data.forEach((mushroom) => {\n            types.forEach((type, index) => {\n                if (mushroom[slot] === type.key) {\n                    count[index]++;\n                }\n            });\n        });\n\n        return count;        \n    }\n\n    //takes a category and returns the subcategory and its count in the mushroom dataset as an array. \n    //array[0] = headers array[1] = count\n    getData(category){\n        let data = [];\n        let subcategories = [];\n        let count = this.getCount(category);\n        let types = this.getAllPossible(category);\n       \n        types.forEach((type) => {\n            subcategories.push(type.value);\n        });\n\n        data.push(subcategories);\n        data.push(count);\n\n        return data;\n    }\n\n\n\n    // Returns all categories\n    getCategories(){\n        return mushroom.header\n    }\n}\n\nexport default lookup;","import React from 'react';\nimport lookup from '../lib/csvValueLookup';\nimport ReactEcharts from 'echarts-for-react';\n\nclass TestComponent extends React.Component {\n    render(){\n        // console.log(json.header);\n        const option = {\n            xAxis: {\n                type: 'category',\n                data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [{\n                tooltip: {},\n                data: [820, 932, 901, 934, 1290, 1330, 1320],\n                type: 'line'\n            }]\n        };\n        const look = new lookup();\n        return (\n            <div style={{width: '100%'}}>\n                <p>{look.lookupChar('e', 'classes')}</p>\n                <ReactEcharts \n                    option={option}\n                    style={{height: '500px', width: '100%'}}\n                />\n            </div>\n        )\n    }\n}\n\nexport default TestComponent;","import React from 'react';\nimport lookup from '../lib/csvValueLookup';\nimport ReactEcharts from 'echarts-for-react';\nimport json from '../data/mushrooms.json';\n\n// This makes a Sunburst chart. It requires the inner and outer prop to be set to valid categories from the mushroom data\nclass GenericEchartsSunburst extends React.Component{\n    // initial setup and data crunching\n    constructor(props){\n        super(props);\n        this.look = new lookup();\n        this.state = {\n            option: null\n        }\n        this.state.option = this.getOption();\n    }\n\n    getOption(){\n        const { inner, outer } = this.props;\n        this.computed = this.compute(inner, outer);\n        let data = [];\n        // build up the data\n        for(let valueInner of this.computed){\n            let obj = {};\n            obj.name = valueInner.value;\n            obj.children = [];\n            for(let valueOuter of valueInner.outer){\n                let outerObj = {};\n                outerObj.name = valueOuter.value;\n                outerObj.value = valueOuter.number;\n                obj.children.push(outerObj);\n            }\n            data.push(obj);\n        }\n        // set the option\n        let option = {\n            series: {\n                type: 'sunburst',\n                // highlightPolicy: 'ancestor',\n                data: data,\n                radius: [0, '90%'],\n                label: {\n                    rotate: 'radial'\n                }\n            }\n        };\n        return option;\n    }\n\n    // This does the math of the sunburst. I belive this to be correct\n    compute(innerCategory, outerCategory){\n        // Small function to make the objects to have a number value that is initially 0\n        function computeHelper(obj){\n            let retObj = {}\n            retObj.key = obj.key;\n            retObj.value = obj.value;\n            retObj.number = 0;\n            return retObj;\n        }\n        // come up with the inner categoryies, but add a number and set to 0\n        const inner = this.look.getAllPossible(innerCategory).map(computeHelper);\n        // for each item in the inner category, add the outer category with number = 0\n        for(let number in inner){\n            inner[number].outer = this.look.getAllPossible(outerCategory).map(computeHelper);\n        }\n        const innerNumber = this.look.getCategoryNumber(innerCategory);\n        const outerNumber = this.look.getCategoryNumber(outerCategory);\n        // I think this will take a horrendous amount of time. I can't think of anything else tho?\n        // feel free to refactor this\n        for(let datum of json.data){\n            for(let itemIn in inner){\n                if(datum[innerNumber] === inner[itemIn].key){\n                    inner[itemIn].number++;\n                    for(let itemOut of inner[itemIn].outer){\n                        if(datum[outerNumber] === itemOut.key){\n                            itemOut.number++;\n                        }\n                    }\n                }\n            }\n        }\n        return inner;\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props !== prevProps){\n            this.setState({\n                option: this.getOption()\n            });\n        }\n    }\n\n    render(){\n        // We may need to change the style, or just pass in style as a prop\n        return (\n            <ReactEcharts \n                option={this.state.option}\n                style={{height: '500px', width: '100%'}}\n            />\n        )\n    }\n}\n\nexport default GenericEchartsSunburst;","import React, { Component } from 'react'\nimport GenericEchartsSunburst from '../components/GenericEchartsSunburst';\nimport lookup from '../lib/csvValueLookup';\n\nexport default class SunburstController extends Component {\n    constructor(props){\n        super(props);\n        this.look = new lookup();\n        this.headers = this.look.getCategories();\n        this.state = {\n            inner: 'class',\n            outer: 'bruises'\n        }\n    }\n\n    setInner = (inner) => {\n        this.setState((state, props) => {\n            return {\n                inner: inner,\n                outer: state.outer\n            };\n        });\n    }\n\n    setOuter = (outer) => {\n        this.setState((state, props) => {\n            return {\n                inner: state.inner,\n                outer: outer\n            };\n        });\n    }\n\n    render() {\n        return (\n        <div style={{width: '100%'}}>\n        <Dropdown items={this.headers} onChange={(event) => this.setInner(event.target.value)} selected={this.state.inner}/>\n        <Dropdown items={this.headers} onChange={(event) => this.setOuter(event.target.value)} selected={this.state.outer}/>\n            <GenericEchartsSunburst \n                inner={this.state.inner}\n                outer={this.state.outer}\n                style={{height: '500px', width: '100%'}}\n            />\n        </div>\n        )\n    }\n}\nconst Dropdown = (props) => {\n    let items = props.items.map(item => {\n        if(props.selected){\n            if(props.selected === item){\n                return <option key={item} value={item} selected={\"selected\"}>{item}</option>\n            }\n        }\n        return <option key={item} value={item}>{item}</option>\n    });\n    return (\n      <select selected={props.selected} onChange={props.onChange}>\n          {items}\n      </select>\n    )\n}\n\n","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport lookup from '../lib/csvValueLookup';\nimport json from '../data/mushrooms.json';\n\nclass OdorSVG extends React.Component {\n    render(){\n        \n        const look = new lookup();\n        \n        var a = 0;\n        var l = 0;\n        var c = 0;\n        var y = 0;\n        var f = 0;\n        var m = 0;\n        var n = 0;\n        var p = 0;\n        var s = 0;\n\n        for (var i = 0; i < json.data.length; i++) {\n            if (json.data[i][5] === \"a\") {\n                a++;\n            }\n            if (json.data[i][5] === \"l\") {\n                l++;\n            }\n            if (json.data[i][5] === \"c\") {\n                c++;\n            }\n            if (json.data[i][5] === \"y\") {\n                y++;\n            }\n            if (json.data[i][5] === \"f\") {\n                f++;\n            }\n            if (json.data[i][5] === \"m\") {\n                m++;\n            }\n            if (json.data[i][5] === \"n\") {\n                n++;\n            }\n            if (json.data[i][5] === \"p\") {\n                p++;\n            }\n            if (json.data[i][5] === \"s\") {\n                s++;\n            }\n        }\n\n        const option = {\n            title: {\n                text: 'Number of Mushrooms by Odor',\n                textStyle: {color: \"white\"},\n                x: 'center',\n                y: 'top'\n              },\n              tooltip: {},\n              legend: {\n                data:['Number of mushrooms'],\n                textStyle: {color: \"white\"},\n                x: 'center',\n                y: 'bottom'\n              },\n              xAxis: {\n                data: look.getAllPossible('odor'),\n                axisLabel: {\n                    textStyle: {color: \"white\"}\n                }\n              },\n              yAxis: {\n                axisLabel: {\n                    textStyle: {color: \"white\"}\n                }                     \n              },\n              series: [{\n                name: 'Number of mushrooms',\n                type: 'bar',              \n                data: [a, l, c, y, f, m, n, p, s]             \n              }]        \n        };\n        \n        return (\n            <div style={{width: '100%'}}>\n                <ReactEcharts \n                    option={option}\n                    style={{height: '500px', width: '100%'}}\n                />\n            </div>\n        )\n    } \n}\n\nexport default OdorSVG;","import React from 'react';\nimport ReactEcharts from 'echarts-for-react';\nimport lookup from '../lib/csvValueLookup';\nimport json from '../data/mushrooms.json';\n\nclass ClassOdorSVG extends React.Component {\n    render(){\n        \n        const look = new lookup();\n        \n        //Edible\n        var ae = 0;\n        var le = 0;\n        var ce = 0;\n        var ye = 0;\n        var fe = 0;\n        var me = 0;\n        var ne = 0;\n        var pe = 0;\n        var se = 0;\n\n        //Poisonous\n        var ap = 0;\n        var lp = 0;\n        var cp = 0;\n        var yp = 0;\n        var fp = 0;\n        var mp = 0;\n        var np = 0;\n        var pp = 0;\n        var sp = 0;        \n\n        for (var i = 0; i < json.data.length; i++) {\n            if (json.data[i][5] === \"a\") {\n                if (json.data[i][0] === \"e\") {\n                    ae++;\n                } else {\n                    ap++;\n                }     \n            }\n            if (json.data[i][5] === \"l\") {\n                if (json.data[i][0] === \"e\") {\n                    le++;\n                } else {\n                    lp++;\n                }     \n            }\n            if (json.data[i][5] === \"c\") {\n                if (json.data[i][0] === \"e\") {\n                    ce++;\n                } else {\n                    cp++;\n                }     \n            }\n            if (json.data[i][5] === \"y\") {\n                if (json.data[i][0] === \"e\") {\n                    ye++;\n                } else {\n                    yp++;\n                }     \n            }\n            if (json.data[i][5] === \"f\") {\n                if (json.data[i][0] === \"e\") {\n                    fe++;\n                } else {\n                    fp++;\n                }     \n            }\n            if (json.data[i][5] === \"m\") {\n                if (json.data[i][0] === \"e\") {\n                    me++;\n                } else {\n                    mp++;\n                }     \n            }\n            if (json.data[i][5] === \"n\") {\n                if (json.data[i][0] === \"e\") {\n                    ne++;\n                } else {\n                    np++;\n                }            \n            }\n            if (json.data[i][5] === \"p\") {\n                if (json.data[i][0] === \"e\") {\n                    pe++;\n                } else {\n                    pp++;\n                }     \n            }\n            if (json.data[i][5] === \"s\") {\n                if (json.data[i][0] === \"e\") {\n                    se++;\n                } else {\n                    sp++;\n                }     \n            }\n        }\n\n        const option = {\n            title: {\n                text: 'Edible Versus Odor',\n                textStyle: {color: \"white\"},\n                x: 'center',\n                y: 'top'\n              },\n              tooltip: {},\n              legend: {\n                data:['Edible', 'Poisonous'],\n                textStyle: {color: \"white\"},\n                x: 'center',\n                y: 'bottom'\n              },\n              xAxis: {\n                data: look.getAllPossible('odor'),\n                axisLabel: {\n                    textStyle: {color: \"white\"}\n                }\n              },\n              yAxis: {\n                axisLabel: {\n                    textStyle: {color: \"white\"}\n                }                     \n              },\n              series: [{\n                name: 'Edible',\n                type: 'bar',              \n                data: [ae, le, ce, ye, fe, me, ne, pe, se]             \n              },\n                {\n                name: 'Poisonous',\n                type: 'bar',              \n                data: [ap, lp, cp, yp, fp, mp, np, pp, sp]             \n              }\n            ]        \n        };\n        \n        return (\n            <div style={{width: '100%'}}>\n                <ReactEcharts \n                    option={option}\n                    style={{height: '500px', width: '100%'}}\n                />\n            </div>\n        )\n    } \n}\n\nexport default ClassOdorSVG;","import React from 'react';\nimport lookup from '../lib/csvValueLookup';\nimport ReactEcharts from 'echarts-for-react';\n\n\nclass GenericBarChart extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.category = this.props.category;\n        this.title = this.props.title;\n        this.colors = this.props.colors;\n        this.look = new lookup();\n        this.state = {\n            option: null,\n            data: null,\n        }\n        this.state.data = this.compileData(this.category, this.colors);\n        this.state.option = this.getOption(this.title, this.state.data, this.category);\n    }\n\n    getOption(title, data, category){\n        let header = this.look.getData(category);\n        \n        option.title.text = title;\n        header[0].forEach((name, index) => {\n            option.xAxis.data.push(name);\n        });\n        option.series.push({data, type:'bar'});   \n        // option.series[0].name = header[0];\n        return option;\n    }\n\n    compileData(category, colors) {\n        let data = this.look.getData(category);\n        let series = [];\n        data[1].forEach((count, index) => {\n            if (colors.length > 0 && colors.length >= data[1].length) {\n                series.push({\n                    value:count,\n                    itemStyle: { color: colors[index]}\n                });\n            }\n                       \n        });\n        \n        return series;        \n    }\n\n\n    render(){\n        console.log(this.state.option);\n        return (\n            <ReactEcharts \n                option={this.state.option}\n                style={{height: '500px', width: '100%'}}\n            />\n\n\n\n        )\n    }\n}\n\nexport default GenericBarChart;\n\n\nlet  option = {\n    title: {\n        text: 'placeholder',\n        textStyle: { color: \"white\" },\n        x: 'center',\n        y: 'top'\n    },\n    xAxis: {\n        type: 'category',\n        data: [],\n        axisLabel: {\n            textStyle: { color: \"white\" }\n        }\n    },\n    yAxis: {\n        type: 'value'\n    },\nseries: \n[\n    // {\n    //     data: [\n    //         {\n    //             value: 120,\n    //             itemStyle: {color: 'blue'},\n    //         },\n    //         {\n    //             value: 200,\n    //             itemStyle: {color: 'red'},\n    //         },\n    //         {\n    //             value: 150,\n    //             itemStyle: {color: 'green'},\n    //         }\n    //     ],\n    //     type: 'bar'\n    // }\n]      \n};","import React from 'react';\nimport lookup from '../lib/csvValueLookup';\nimport ReactEcharts from 'echarts-for-react';\nimport json from '../data/mushrooms.json';\n\nclass TryingHard extends React.Component {\n    render() {\n        const look = new lookup();\n        \n        const option = {\n        color: ['324E38','274E2F','1B5C28','157328', '10952B', '0FB932'],\n        tooltip: {\n            trigger: 'axis',\n            axisPointer: {\n                type: 'shadow'\n            }\n        },\n        legend: {\n            data: ['Poisonous', 'Edible']\n        },\n        toolbox: {\n            show: true,\n            orient: 'vertical',\n            left: 'right',\n            top: 'center',\n            feature: {\n                mark: {show: true},\n                dataView: {show: true, readOnly: false},\n                magicType: {show: true, type: ['line', 'bar', 'stack', 'tilted']},\n                restore: {show: true},\n                saveAsImage: {show: true}\n        }\n        }, //end of toolbox\n        calculable: true,\n        xAxis: [\n            {\n                type: 'category',\n                axisTick: {show: false},\n                data: ['Grasses', 'Leaves', 'Meadows', 'Paths', 'Urban', 'Waste', 'Woods']\n            }\n        ], \n        yAxis: [\n            {\n                type: 'value'\n            }\n        ],\n        series: [\n            {\n            name: 'Poisonous',\n            type: 'bar',\n            barGap: 0,\n            //label: labelOption,\n            data: [740, 592, 36, 1008, 272, 0, 1268]\n        },\n        {\n            name: 'Edible',\n            type: 'bar',\n            //label: labelOption,\n            data: [1408, 240, 256, 136, 96, 192, 1880]\n        }\n        ]\n    };//end of option\n        \n    return (\n        <div style={{ width: '100%'}}>\n            <ReactEcharts\n                option={option}\n                style={{height: '500px', width: '100%'}}\n                />\n        </div>\n            )\n        }//end of render\n        \n}//end of class\n\nexport default TryingHard;","/* THIS IS THE ROOT OF THE APP */\n\nimport React, { Component } from 'react';\nimport logo from './pics/logo.svg'; //Import components/Images from folders like this\nimport './App.css';\nimport TestComponent from './components/test';\nimport SunburstController from './components/SunburstController';\nimport OdorSVG from './components/OdorSVG';\nimport ClassOdorSVG from './components/ClassOdorSVG';\nimport GenericBarChart from './components/GenericBarChart';\nimport TryingHard from './components/mushStackChart';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <GenericBarChart title='Population Shrooms' category='population' colors={['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83']} />\n          <TestComponent />\n          <SunburstController />\n          <OdorSVG />\n          <ClassOdorSVG />\n          <TryingHard />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App; //For each component you make, you'll need to export it.\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}